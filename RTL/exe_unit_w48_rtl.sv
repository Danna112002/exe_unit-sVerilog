/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module \$paramod\Dodawanie\WIDTH=32 (i_argA, i_argB, o_result, o_carry);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  input [31:0] i_argA;
  input [31:0] i_argB;
  output o_carry;
  output [31:0] o_result;
  assign _141_ = i_argA[0] & i_argB[0];
  assign o_result[0] = i_argA[0] ^ i_argB[0];
  assign _000_ = i_argA[1] & i_argB[1];
  assign _001_ = i_argA[1] ^ i_argB[1];
  assign _002_ = _141_ & _001_;
  assign o_result[1] = _141_ ^ _001_;
  assign _003_ = _000_ | _002_;
  assign _004_ = i_argA[2] & i_argB[2];
  assign _005_ = i_argA[2] ^ i_argB[2];
  assign _006_ = _003_ & _005_;
  assign o_result[2] = _003_ ^ _005_;
  assign _007_ = _004_ | _006_;
  assign _008_ = i_argA[3] & i_argB[3];
  assign _009_ = i_argA[3] ^ i_argB[3];
  assign _010_ = _007_ & _009_;
  assign o_result[3] = _007_ ^ _009_;
  assign _011_ = _008_ | _010_;
  assign _012_ = i_argA[4] & i_argB[4];
  assign _013_ = i_argA[4] ^ i_argB[4];
  assign _014_ = _011_ & _013_;
  assign o_result[4] = _011_ ^ _013_;
  assign _015_ = _012_ | _014_;
  assign _016_ = i_argA[5] & i_argB[5];
  assign _017_ = i_argA[5] ^ i_argB[5];
  assign _018_ = _015_ & _017_;
  assign o_result[5] = _015_ ^ _017_;
  assign _019_ = _016_ | _018_;
  assign _020_ = i_argA[6] & i_argB[6];
  assign _021_ = i_argA[6] ^ i_argB[6];
  assign _022_ = _019_ & _021_;
  assign o_result[6] = _019_ ^ _021_;
  assign _023_ = _020_ | _022_;
  assign _024_ = i_argA[7] | i_argB[7];
  assign _025_ = i_argA[7] & i_argB[7];
  assign _026_ = i_argA[7] ^ i_argB[7];
  assign o_result[7] = _023_ ^ _026_;
  assign _027_ = i_argA[8] & i_argB[8];
  assign _028_ = i_argA[8] ^ i_argB[8];
  assign _029_ = _023_ & _024_;
  assign _030_ = _025_ | _029_;
  assign _031_ = _028_ & _030_;
  assign o_result[8] = _028_ ^ _030_;
  assign _032_ = _027_ | _031_;
  assign _033_ = i_argA[9] | i_argB[9];
  assign _034_ = i_argA[9] & i_argB[9];
  assign _035_ = i_argA[9] ^ i_argB[9];
  assign o_result[9] = _032_ ^ _035_;
  assign _036_ = i_argA[10] & i_argB[10];
  assign _037_ = i_argA[10] ^ i_argB[10];
  assign _038_ = _032_ | _034_;
  assign _039_ = _033_ & _038_;
  assign _040_ = _037_ & _039_;
  assign o_result[10] = _037_ ^ _039_;
  assign _041_ = _036_ | _040_;
  assign _042_ = i_argA[11] | i_argB[11];
  assign _043_ = i_argA[11] & i_argB[11];
  assign _044_ = i_argA[11] ^ i_argB[11];
  assign o_result[11] = _041_ ^ _044_;
  assign _045_ = i_argA[12] & i_argB[12];
  assign _046_ = i_argA[12] ^ i_argB[12];
  assign _047_ = _041_ | _043_;
  assign _048_ = _042_ & _047_;
  assign _049_ = _046_ & _048_;
  assign o_result[12] = _046_ ^ _048_;
  assign _050_ = _045_ | _049_;
  assign _051_ = i_argA[13] | i_argB[13];
  assign _052_ = i_argA[13] & i_argB[13];
  assign _053_ = i_argA[13] ^ i_argB[13];
  assign o_result[13] = _050_ ^ _053_;
  assign _054_ = i_argA[14] & i_argB[14];
  assign _055_ = i_argA[14] ^ i_argB[14];
  assign _056_ = _050_ | _052_;
  assign _057_ = _051_ & _056_;
  assign _058_ = _055_ & _057_;
  assign o_result[14] = _055_ ^ _057_;
  assign _059_ = _054_ | _058_;
  assign _060_ = i_argA[15] | i_argB[15];
  assign _061_ = i_argA[15] & i_argB[15];
  assign _062_ = i_argA[15] ^ i_argB[15];
  assign o_result[15] = _059_ ^ _062_;
  assign _063_ = i_argA[16] & i_argB[16];
  assign _064_ = i_argA[16] ^ i_argB[16];
  assign _065_ = _059_ | _061_;
  assign _066_ = _060_ & _065_;
  assign _067_ = _064_ & _066_;
  assign o_result[16] = _064_ ^ _066_;
  assign _068_ = _063_ | _067_;
  assign _069_ = i_argA[17] & i_argB[17];
  assign _070_ = i_argA[17] | i_argB[17];
  assign _071_ = i_argA[17] ^ i_argB[17];
  assign o_result[17] = _068_ ^ _071_;
  assign _072_ = i_argA[18] & i_argB[18];
  assign _073_ = i_argA[18] ^ i_argB[18];
  assign _074_ = _068_ & _070_;
  assign _075_ = _069_ | _074_;
  assign _076_ = _073_ & _075_;
  assign o_result[18] = _073_ ^ _075_;
  assign _077_ = _072_ | _076_;
  assign _078_ = i_argA[19] & i_argB[19];
  assign _079_ = i_argA[19] | i_argB[19];
  assign _080_ = i_argA[19] ^ i_argB[19];
  assign o_result[19] = _077_ ^ _080_;
  assign _081_ = i_argA[20] & i_argB[20];
  assign _082_ = i_argA[20] ^ i_argB[20];
  assign _083_ = _077_ & _079_;
  assign _084_ = _078_ | _083_;
  assign _085_ = _082_ & _084_;
  assign o_result[20] = _082_ ^ _084_;
  assign _086_ = _081_ | _085_;
  assign _087_ = i_argA[21] & i_argB[21];
  assign _088_ = i_argA[21] | i_argB[21];
  assign _089_ = i_argA[21] ^ i_argB[21];
  assign o_result[21] = _086_ ^ _089_;
  assign _090_ = i_argA[22] & i_argB[22];
  assign _091_ = i_argA[22] ^ i_argB[22];
  assign _092_ = _086_ & _088_;
  assign _093_ = _087_ | _092_;
  assign _094_ = _091_ & _093_;
  assign o_result[22] = _091_ ^ _093_;
  assign _095_ = _090_ | _094_;
  assign _096_ = i_argA[23] & i_argB[23];
  assign _097_ = i_argA[23] | i_argB[23];
  assign _098_ = i_argA[23] ^ i_argB[23];
  assign o_result[23] = _095_ ^ _098_;
  assign _099_ = i_argA[24] & i_argB[24];
  assign _100_ = i_argA[24] ^ i_argB[24];
  assign _101_ = _095_ & _097_;
  assign _102_ = _096_ | _101_;
  assign _103_ = _100_ & _102_;
  assign o_result[24] = _100_ ^ _102_;
  assign _104_ = _099_ | _103_;
  assign _105_ = i_argA[25] & i_argB[25];
  assign _106_ = i_argA[25] | i_argB[25];
  assign _107_ = i_argA[25] ^ i_argB[25];
  assign o_result[25] = _104_ ^ _107_;
  assign _108_ = i_argA[26] & i_argB[26];
  assign _109_ = i_argA[26] ^ i_argB[26];
  assign _110_ = _099_ | _105_;
  assign _111_ = _103_ | _110_;
  assign _112_ = _106_ & _111_;
  assign _113_ = _109_ & _112_;
  assign o_result[26] = _109_ ^ _112_;
  assign _114_ = _108_ | _113_;
  assign _115_ = i_argA[27] | i_argB[27];
  assign _116_ = i_argA[27] & i_argB[27];
  assign _117_ = i_argA[27] ^ i_argB[27];
  assign o_result[27] = _114_ ^ _117_;
  assign _118_ = i_argA[28] & i_argB[28];
  assign _119_ = i_argA[28] ^ i_argB[28];
  assign _120_ = _108_ | _116_;
  assign _121_ = _113_ | _120_;
  assign _122_ = _115_ & _121_;
  assign _123_ = _119_ & _122_;
  assign o_result[28] = _119_ ^ _122_;
  assign _124_ = _118_ | _123_;
  assign _125_ = i_argA[29] | i_argB[29];
  assign _126_ = i_argA[29] & i_argB[29];
  assign _127_ = i_argA[29] ^ i_argB[29];
  assign o_result[29] = _124_ ^ _127_;
  assign _128_ = i_argA[30] & i_argB[30];
  assign _129_ = i_argA[30] ^ i_argB[30];
  assign _130_ = _118_ | _126_;
  assign _131_ = _123_ | _130_;
  assign _132_ = _125_ & _131_;
  assign _133_ = _129_ & _132_;
  assign o_result[30] = _129_ ^ _132_;
  assign _134_ = _128_ | _133_;
  assign _135_ = i_argA[31] | i_argB[31];
  assign _136_ = i_argA[31] & i_argB[31];
  assign _137_ = i_argA[31] ^ i_argB[31];
  assign o_result[31] = _134_ ^ _137_;
  assign _138_ = _128_ | _136_;
  assign _139_ = _135_ & _138_;
  assign _140_ = _133_ & _137_;
  assign o_carry = _139_ | _140_;
endmodule

module \$paramod\Porownywanie\BITS=32 (i_argA, i_argB, o_result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  input [31:0] i_argA;
  input [31:0] i_argB;
  output o_result;
  assign _180_ = ~i_argA[31];
  assign _181_ = ~i_argA[30];
  assign _182_ = ~i_argB[29];
  assign _183_ = ~i_argA[29];
  assign _184_ = ~i_argA[28];
  assign _185_ = ~i_argA[27];
  assign _186_ = ~i_argA[26];
  assign _187_ = ~i_argB[25];
  assign _188_ = ~i_argA[25];
  assign _189_ = ~i_argB[24];
  assign _190_ = ~i_argA[24];
  assign _191_ = ~i_argB[23];
  assign _192_ = ~i_argA[23];
  assign _193_ = ~i_argB[22];
  assign _194_ = ~i_argA[22];
  assign _195_ = ~i_argB[21];
  assign _196_ = ~i_argA[21];
  assign _197_ = ~i_argB[20];
  assign _198_ = ~i_argA[20];
  assign _199_ = ~i_argA[19];
  assign _200_ = ~i_argA[18];
  assign _201_ = ~i_argA[17];
  assign _202_ = ~i_argB[16];
  assign _203_ = ~i_argA[16];
  assign _204_ = ~i_argA[15];
  assign _205_ = ~i_argA[14];
  assign _206_ = ~i_argA[13];
  assign _207_ = ~i_argA[12];
  assign _208_ = ~i_argA[11];
  assign _209_ = ~i_argA[10];
  assign _210_ = ~i_argB[9];
  assign _211_ = ~i_argA[9];
  assign _212_ = ~i_argB[8];
  assign _213_ = ~i_argA[8];
  assign _000_ = ~i_argA[7];
  assign _001_ = ~i_argA[6];
  assign _002_ = ~i_argA[5];
  assign _003_ = ~i_argA[4];
  assign _004_ = ~i_argA[3];
  assign _005_ = ~i_argA[2];
  assign _006_ = ~i_argA[1];
  assign _007_ = ~i_argA[0];
  assign _008_ = i_argB[6] | _001_;
  assign _009_ = i_argB[5] & _002_;
  assign _010_ = i_argB[0] | _007_;
  assign _011_ = i_argB[1] | _006_;
  assign _012_ = _010_ & _011_;
  assign _013_ = i_argB[2] & _005_;
  assign _014_ = i_argB[1] & _006_;
  assign _015_ = _013_ | _014_;
  assign _016_ = _012_ | _015_;
  assign _017_ = i_argB[3] | _004_;
  assign _018_ = i_argB[2] | _005_;
  assign _019_ = _017_ & _018_;
  assign _020_ = _016_ & _019_;
  assign _021_ = i_argB[3] & _004_;
  assign _022_ = i_argB[4] & _003_;
  assign _023_ = _021_ | _022_;
  assign _024_ = _020_ | _023_;
  assign _025_ = i_argB[5] | _002_;
  assign _026_ = i_argB[4] | _003_;
  assign _027_ = _025_ & _026_;
  assign _028_ = _024_ & _027_;
  assign _029_ = _009_ | _028_;
  assign _030_ = _008_ & _029_;
  assign _031_ = i_argB[7] & _000_;
  assign _032_ = i_argB[6] & _001_;
  assign _033_ = _031_ | _032_;
  assign _034_ = _030_ | _033_;
  assign _035_ = i_argB[10] & _209_;
  assign _036_ = i_argB[11] & _208_;
  assign _037_ = i_argB[9] | _211_;
  assign _038_ = i_argB[11] | _208_;
  assign _039_ = i_argB[10] ^ i_argA[10];
  assign _040_ = i_argB[11] ^ i_argA[11];
  assign _041_ = _039_ | _040_;
  assign _042_ = ~_041_;
  assign _043_ = _037_ & _042_;
  assign _044_ = i_argB[9] & _211_;
  assign _045_ = _210_ | i_argA[9];
  assign _046_ = i_argB[8] & _213_;
  assign _047_ = _212_ | i_argA[8];
  assign _048_ = _045_ & _047_;
  assign _049_ = _044_ | _046_;
  assign _050_ = i_argB[7] | _000_;
  assign _051_ = i_argB[8] | _213_;
  assign _052_ = _050_ & _051_;
  assign _053_ = _048_ & _052_;
  assign _054_ = _043_ & _053_;
  assign _055_ = _034_ & _054_;
  assign _056_ = _043_ & _049_;
  assign _057_ = _035_ & _038_;
  assign _058_ = _036_ | _057_;
  assign _059_ = _056_ | _058_;
  assign _060_ = _055_ | _059_;
  assign _061_ = i_argB[14] & _205_;
  assign _062_ = i_argB[15] & _204_;
  assign _063_ = i_argB[15] | _204_;
  assign _064_ = i_argB[14] ^ _205_;
  assign _065_ = i_argB[15] ^ _204_;
  assign _066_ = _064_ & _065_;
  assign _067_ = i_argB[13] & _206_;
  assign _068_ = i_argB[12] & _207_;
  assign _069_ = i_argB[13] | _206_;
  assign _070_ = i_argB[12] ^ i_argA[12];
  assign _071_ = i_argB[13] ^ i_argA[13];
  assign _072_ = _070_ | _071_;
  assign _073_ = ~_072_;
  assign _074_ = _066_ & _073_;
  assign _075_ = _060_ & _074_;
  assign _076_ = _068_ & _069_;
  assign _077_ = _067_ | _076_;
  assign _078_ = _066_ & _077_;
  assign _079_ = _061_ & _063_;
  assign _080_ = _062_ | _079_;
  assign _081_ = _078_ | _080_;
  assign _082_ = _075_ | _081_;
  assign _083_ = i_argB[31] & _180_;
  assign _084_ = i_argB[30] & _181_;
  assign _085_ = i_argB[29] | _183_;
  assign _086_ = i_argB[31] | _180_;
  assign _087_ = i_argB[30] ^ i_argA[30];
  assign _088_ = i_argB[31] ^ i_argA[31];
  assign _089_ = _087_ | _088_;
  assign _090_ = ~_089_;
  assign _091_ = _085_ & _090_;
  assign _092_ = i_argB[29] & _183_;
  assign _093_ = _182_ | i_argA[29];
  assign _094_ = i_argB[28] & _184_;
  assign _095_ = _092_ | _094_;
  assign _096_ = i_argB[28] ^ _184_;
  assign _097_ = _093_ & _096_;
  assign _098_ = _091_ & _097_;
  assign _099_ = i_argB[26] & _186_;
  assign _100_ = i_argB[27] | _185_;
  assign _101_ = i_argB[27] & _185_;
  assign _102_ = i_argB[26] ^ _186_;
  assign _103_ = i_argB[27] ^ _185_;
  assign _104_ = _102_ & _103_;
  assign _105_ = i_argB[25] & _188_;
  assign _106_ = _187_ | i_argA[25];
  assign _107_ = i_argB[24] & _190_;
  assign _108_ = _189_ | i_argA[24];
  assign _109_ = _106_ & _108_;
  assign _110_ = i_argB[25] | _188_;
  assign _111_ = i_argB[24] | _190_;
  assign _112_ = _110_ & _111_;
  assign _113_ = _109_ & _112_;
  assign _114_ = _104_ & _113_;
  assign _115_ = _098_ & _114_;
  assign _116_ = i_argB[22] | _194_;
  assign _117_ = i_argB[21] | _196_;
  assign _118_ = _116_ & _117_;
  assign _119_ = i_argB[23] & _192_;
  assign _120_ = _191_ | i_argA[23];
  assign _121_ = i_argB[22] & _194_;
  assign _122_ = _193_ | i_argA[22];
  assign _123_ = _120_ & _122_;
  assign _124_ = _119_ | _121_;
  assign _125_ = _118_ & _123_;
  assign _126_ = i_argB[20] & _198_;
  assign _127_ = _197_ | i_argA[20];
  assign _128_ = i_argB[16] | _203_;
  assign _129_ = _127_ & _128_;
  assign _130_ = i_argB[17] & _201_;
  assign _131_ = i_argB[17] | _201_;
  assign _132_ = i_argB[17] ^ _201_;
  assign _133_ = _129_ & _132_;
  assign _134_ = _125_ & _133_;
  assign _135_ = i_argB[18] & _200_;
  assign _136_ = i_argB[19] & _199_;
  assign _137_ = _135_ | _136_;
  assign _138_ = i_argB[19] | _199_;
  assign _139_ = i_argB[18] ^ _200_;
  assign _140_ = i_argB[19] ^ _199_;
  assign _141_ = _139_ & _140_;
  assign _142_ = i_argB[16] & _203_;
  assign _143_ = _202_ | i_argA[16];
  assign _144_ = i_argB[21] & _196_;
  assign _145_ = _195_ | i_argA[21];
  assign _146_ = _143_ & _145_;
  assign _147_ = i_argB[20] | _198_;
  assign _148_ = i_argB[23] | _192_;
  assign _149_ = _147_ & _148_;
  assign _150_ = _146_ & _149_;
  assign _151_ = _141_ & _150_;
  assign _152_ = _134_ & _151_;
  assign _153_ = _115_ & _152_;
  assign _154_ = _082_ & _153_;
  assign _155_ = _131_ & _142_;
  assign _156_ = _130_ | _155_;
  assign _157_ = _141_ & _156_;
  assign _158_ = _137_ & _138_;
  assign _159_ = _126_ | _158_;
  assign _160_ = _157_ | _159_;
  assign _161_ = _147_ & _160_;
  assign _162_ = _144_ | _161_;
  assign _163_ = _118_ & _162_;
  assign _164_ = _124_ | _163_;
  assign _165_ = _115_ & _148_;
  assign _166_ = _164_ & _165_;
  assign _167_ = _107_ & _110_;
  assign _168_ = _105_ | _167_;
  assign _169_ = _104_ & _168_;
  assign _170_ = _099_ & _100_;
  assign _171_ = _101_ | _170_;
  assign _172_ = _169_ | _171_;
  assign _173_ = _098_ & _172_;
  assign _174_ = _084_ & _086_;
  assign _175_ = _083_ | _174_;
  assign _176_ = _091_ & _095_;
  assign _177_ = _175_ | _176_;
  assign _178_ = _173_ | _177_;
  assign _179_ = _166_ | _178_;
  assign o_result = _154_ | _179_;
endmodule

module \$paramod\konwersja\WIDTH=32 (i_argA, o_result, o_error);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  input [31:0] i_argA;
  output o_error;
  output [31:0] o_result;
  assign _055_ = ~i_argA[31];
  assign _056_ = _055_ & i_argA[1];
  assign _057_ = i_argA[0] & i_argA[1];
  assign _058_ = ~_057_;
  assign _059_ = i_argA[0] | i_argA[1];
  assign _060_ = i_argA[31] & _059_;
  assign _061_ = _058_ & _060_;
  assign o_result[1] = _056_ | _061_;
  assign o_result[2] = i_argA[2] ^ _060_;
  assign _062_ = i_argA[2] | _059_;
  assign _063_ = i_argA[31] & _062_;
  assign o_result[3] = i_argA[3] ^ _063_;
  assign _064_ = i_argA[3] | _062_;
  assign _065_ = i_argA[31] & _064_;
  assign o_result[4] = i_argA[4] ^ _065_;
  assign _066_ = i_argA[4] | _064_;
  assign _067_ = i_argA[31] & _066_;
  assign o_result[5] = i_argA[5] ^ _067_;
  assign _068_ = i_argA[5] | _066_;
  assign _069_ = i_argA[31] & _068_;
  assign o_result[6] = i_argA[6] ^ _069_;
  assign _070_ = i_argA[6] | _068_;
  assign _071_ = i_argA[31] & _070_;
  assign o_result[7] = i_argA[7] ^ _071_;
  assign _072_ = i_argA[7] | _070_;
  assign _073_ = i_argA[31] & _072_;
  assign o_result[8] = i_argA[8] ^ _073_;
  assign _074_ = i_argA[8] | _072_;
  assign _075_ = i_argA[31] & _074_;
  assign o_result[9] = i_argA[9] ^ _075_;
  assign _076_ = i_argA[9] | _074_;
  assign _077_ = i_argA[31] & _076_;
  assign o_result[10] = i_argA[10] ^ _077_;
  assign _078_ = i_argA[10] | _076_;
  assign _079_ = i_argA[31] & _078_;
  assign o_result[11] = i_argA[11] ^ _079_;
  assign _000_ = i_argA[11] | _078_;
  assign _001_ = i_argA[31] & _000_;
  assign o_result[12] = i_argA[12] ^ _001_;
  assign _002_ = i_argA[12] | _000_;
  assign _003_ = i_argA[31] & _002_;
  assign o_result[13] = i_argA[13] ^ _003_;
  assign _004_ = i_argA[13] | _002_;
  assign _005_ = i_argA[31] & _004_;
  assign o_result[14] = i_argA[14] ^ _005_;
  assign _006_ = i_argA[14] | _004_;
  assign _007_ = i_argA[31] & _006_;
  assign o_result[15] = i_argA[15] ^ _007_;
  assign _008_ = i_argA[15] | _006_;
  assign _009_ = i_argA[31] & _008_;
  assign o_result[16] = i_argA[16] ^ _009_;
  assign _010_ = i_argA[16] | _008_;
  assign _011_ = i_argA[31] & _010_;
  assign o_result[17] = i_argA[17] ^ _011_;
  assign _012_ = i_argA[16] | i_argA[17];
  assign _013_ = _008_ | _012_;
  assign _014_ = i_argA[31] & _013_;
  assign o_result[18] = i_argA[18] ^ _014_;
  assign _015_ = i_argA[18] | _013_;
  assign _016_ = i_argA[31] & _015_;
  assign o_result[19] = i_argA[19] ^ _016_;
  assign _017_ = i_argA[18] | i_argA[19];
  assign _018_ = _013_ | _017_;
  assign _019_ = i_argA[31] & _018_;
  assign o_result[20] = i_argA[20] ^ _019_;
  assign _020_ = i_argA[20] | _018_;
  assign _021_ = i_argA[31] & _020_;
  assign o_result[21] = i_argA[21] ^ _021_;
  assign _022_ = i_argA[20] | i_argA[21];
  assign _023_ = _017_ | _022_;
  assign _024_ = _013_ | _023_;
  assign _025_ = i_argA[31] & _024_;
  assign o_result[22] = i_argA[22] ^ _025_;
  assign _026_ = i_argA[22] | _024_;
  assign _027_ = i_argA[31] & _026_;
  assign o_result[23] = i_argA[23] ^ _027_;
  assign _028_ = i_argA[22] | i_argA[23];
  assign _029_ = _024_ | _028_;
  assign _030_ = i_argA[31] & _029_;
  assign o_result[24] = i_argA[24] ^ _030_;
  assign _031_ = i_argA[24] | _029_;
  assign _032_ = i_argA[31] & _031_;
  assign o_result[25] = i_argA[25] ^ _032_;
  assign _033_ = i_argA[24] | i_argA[25];
  assign _034_ = _029_ | _033_;
  assign _035_ = i_argA[31] & _034_;
  assign o_result[26] = i_argA[26] ^ _035_;
  assign _036_ = i_argA[26] | _034_;
  assign _037_ = i_argA[31] & _036_;
  assign o_result[27] = i_argA[27] ^ _037_;
  assign _038_ = i_argA[26] | i_argA[27];
  assign _039_ = _034_ | _038_;
  assign _040_ = i_argA[31] & _039_;
  assign o_result[28] = i_argA[28] ^ _040_;
  assign _041_ = i_argA[28] | _039_;
  assign _042_ = i_argA[31] & _041_;
  assign o_result[29] = i_argA[29] ^ _042_;
  assign _043_ = i_argA[28] | i_argA[29];
  assign _044_ = _039_ | _043_;
  assign _045_ = i_argA[31] & _044_;
  assign o_result[30] = i_argA[30] ^ _045_;
  assign _046_ = _033_ | _038_;
  assign _047_ = _043_ | _046_;
  assign _048_ = _055_ | i_argA[15];
  assign _049_ = i_argA[30] | _048_;
  assign _050_ = _012_ | _028_;
  assign _051_ = _049_ | _050_;
  assign _052_ = _023_ | _051_;
  assign _053_ = _047_ | _052_;
  assign _054_ = _006_ | _053_;
  assign o_error = ~_054_;
  assign { o_result[31], o_result[0] } = { i_argA[31], i_argA[0] };
endmodule

module \$paramod\ustawianie\BITS=32 (i_argA, i_argB, o_result, o_error);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  input [31:0] i_argA;
  input [31:0] i_argB;
  wire [31:0] n;
  output o_error;
  output [31:0] o_result;
  assign _096_ = ~i_argB[5];
  assign _097_ = ~i_argB[3];
  assign _000_ = ~i_argB[2];
  assign _001_ = ~i_argB[1];
  assign _002_ = ~i_argB[0];
  assign _003_ = i_argB[31] | i_argB[30];
  assign _004_ = i_argB[29] | i_argB[28];
  assign _005_ = i_argB[27] | i_argB[26];
  assign _006_ = _004_ | _005_;
  assign _007_ = _003_ | _006_;
  assign _008_ = ~_007_;
  assign _009_ = i_argB[7] | i_argB[6];
  assign _010_ = i_argB[17] | i_argB[16];
  assign _011_ = _009_ | _010_;
  assign _012_ = i_argB[21] | i_argB[20];
  assign _013_ = i_argB[19] | i_argB[18];
  assign _014_ = _012_ | _013_;
  assign _015_ = i_argB[25] | i_argB[24];
  assign _016_ = i_argB[23] | i_argB[22];
  assign _017_ = _015_ | _016_;
  assign _018_ = _014_ | _017_;
  assign _019_ = _011_ | _018_;
  assign _020_ = ~_019_;
  assign _021_ = _008_ & _020_;
  assign _022_ = i_argB[11] | i_argB[10];
  assign _023_ = i_argB[9] | i_argB[8];
  assign _024_ = _022_ | _023_;
  assign _025_ = ~_024_;
  assign _026_ = i_argB[15] | i_argB[14];
  assign _027_ = i_argB[13] | i_argB[12];
  assign _028_ = _026_ | _027_;
  assign _029_ = ~_028_;
  assign _030_ = _025_ & _029_;
  assign _031_ = _021_ & _030_;
  assign _032_ = ~_031_;
  assign o_error = i_argB[5] | _032_;
  assign _033_ = _001_ & _002_;
  assign _034_ = _000_ & _030_;
  assign _035_ = _097_ & _034_;
  assign _036_ = _033_ & _035_;
  assign _037_ = i_argB[5] | i_argB[4];
  assign _038_ = ~_037_;
  assign _039_ = _021_ & _038_;
  assign _040_ = _036_ & _039_;
  assign o_result[0] = i_argA[0] | _040_;
  assign _041_ = _001_ & i_argB[0];
  assign _042_ = _035_ & _041_;
  assign _043_ = _039_ & _042_;
  assign o_result[1] = i_argA[1] | _043_;
  assign _044_ = i_argB[1] & _002_;
  assign _045_ = _035_ & _044_;
  assign _046_ = _039_ & _045_;
  assign o_result[2] = i_argA[2] | _046_;
  assign _047_ = i_argB[1] & i_argB[0];
  assign _048_ = _035_ & _047_;
  assign _049_ = _039_ & _048_;
  assign o_result[3] = i_argA[3] | _049_;
  assign _050_ = i_argB[2] & _030_;
  assign _051_ = _097_ & _050_;
  assign _052_ = _033_ & _051_;
  assign _053_ = _039_ & _052_;
  assign o_result[4] = i_argA[4] | _053_;
  assign _054_ = _041_ & _051_;
  assign _055_ = _039_ & _054_;
  assign o_result[5] = i_argA[5] | _055_;
  assign _056_ = _044_ & _051_;
  assign _057_ = _039_ & _056_;
  assign o_result[6] = i_argA[6] | _057_;
  assign _058_ = _047_ & _051_;
  assign _059_ = _039_ & _058_;
  assign o_result[7] = i_argA[7] | _059_;
  assign _060_ = i_argB[3] & _034_;
  assign _061_ = _033_ & _060_;
  assign _062_ = _039_ & _061_;
  assign o_result[8] = i_argA[8] | _062_;
  assign _063_ = _041_ & _060_;
  assign _064_ = _039_ & _063_;
  assign o_result[9] = i_argA[9] | _064_;
  assign _065_ = _044_ & _060_;
  assign _066_ = _039_ & _065_;
  assign o_result[10] = i_argA[10] | _066_;
  assign _067_ = _047_ & _060_;
  assign _068_ = _039_ & _067_;
  assign o_result[11] = i_argA[11] | _068_;
  assign _069_ = i_argB[3] & _050_;
  assign _070_ = _033_ & _069_;
  assign _071_ = _039_ & _070_;
  assign o_result[12] = i_argA[12] | _071_;
  assign _072_ = _041_ & _069_;
  assign _073_ = _039_ & _072_;
  assign o_result[13] = i_argA[13] | _073_;
  assign _074_ = _044_ & _069_;
  assign _075_ = _039_ & _074_;
  assign o_result[14] = i_argA[14] | _075_;
  assign _076_ = _047_ & _069_;
  assign _077_ = _039_ & _076_;
  assign o_result[15] = i_argA[15] | _077_;
  assign _078_ = _096_ & i_argB[4];
  assign _079_ = _021_ & _078_;
  assign _080_ = _036_ & _079_;
  assign o_result[16] = i_argA[16] | _080_;
  assign _081_ = _042_ & _079_;
  assign o_result[17] = i_argA[17] | _081_;
  assign _082_ = _045_ & _079_;
  assign o_result[18] = i_argA[18] | _082_;
  assign _083_ = _048_ & _079_;
  assign o_result[19] = i_argA[19] | _083_;
  assign _084_ = _052_ & _079_;
  assign o_result[20] = i_argA[20] | _084_;
  assign _085_ = _054_ & _079_;
  assign o_result[21] = i_argA[21] | _085_;
  assign _086_ = _056_ & _079_;
  assign o_result[22] = i_argA[22] | _086_;
  assign _087_ = _058_ & _079_;
  assign o_result[23] = i_argA[23] | _087_;
  assign _088_ = _061_ & _079_;
  assign o_result[24] = i_argA[24] | _088_;
  assign _089_ = _063_ & _079_;
  assign o_result[25] = i_argA[25] | _089_;
  assign _090_ = _065_ & _079_;
  assign o_result[26] = i_argA[26] | _090_;
  assign _091_ = _067_ & _079_;
  assign o_result[27] = i_argA[27] | _091_;
  assign _092_ = _070_ & _079_;
  assign o_result[28] = i_argA[28] | _092_;
  assign _093_ = _072_ & _079_;
  assign o_result[29] = i_argA[29] | _093_;
  assign _094_ = _074_ & _079_;
  assign o_result[30] = i_argA[30] | _094_;
  assign _095_ = _076_ & _079_;
  assign o_result[31] = i_argA[31] | _095_;
  assign n = 32'd32;
endmodule

module exe_unit_w48_rtl(i_argA, i_argB, i_oper, i_clk, i_rst, o_carry, o_result, o_status, o_error_konw, o_error_ust);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire flaga_error;
  wire flaga_even;
  wire flaga_negative;
  wire flaga_zero;
  input [31:0] i_argA;
  input [31:0] i_argB;
  input i_clk;
  input [1:0] i_oper;
  input i_rst;
  output o_carry;
  output o_error_konw;
  output o_error_ust;
  output [31:0] o_result;
  output [3:0] o_status;
  reg [3:0] o_status;
  wire [31:0] w_dod;
  wire [31:0] w_konw;
  wire w_por;
  wire [31:0] w_ust;
  wire [31:0] wynik;
  assign _000_ = ~i_oper[1];
  assign _001_ = ~i_oper[0];
  assign _002_ = ~w_dod[8];
  assign _003_ = ~w_dod[9];
  assign _004_ = ~w_ust[12];
  assign _005_ = ~w_dod[12];
  assign _006_ = ~w_ust[13];
  assign _007_ = ~w_dod[13];
  assign _008_ = ~w_dod[14];
  assign _009_ = ~w_ust[15];
  assign _010_ = ~w_dod[15];
  assign _011_ = ~w_ust[22];
  assign _012_ = ~w_dod[22];
  assign _013_ = ~w_ust[23];
  assign _014_ = ~w_dod[23];
  assign _015_ = ~w_ust[24];
  assign _016_ = ~w_dod[24];
  assign _017_ = ~w_dod[25];
  assign _018_ = ~w_ust[26];
  assign _019_ = ~w_dod[26];
  assign _020_ = ~w_ust[27];
  assign _021_ = ~w_dod[27];
  assign _022_ = ~w_ust[28];
  assign _023_ = ~w_dod[28];
  assign _024_ = ~w_ust[29];
  assign _025_ = ~w_dod[29];
  assign _026_ = ~w_dod[30];
  assign _027_ = ~w_dod[31];
  assign _028_ = i_oper[1] & _001_;
  assign _029_ = _000_ | i_oper[0];
  assign _030_ = w_ust[0] & _028_;
  assign _031_ = _000_ & _001_;
  assign _032_ = i_oper[1] | i_oper[0];
  assign _033_ = _000_ & w_por;
  assign _034_ = _031_ | _033_;
  assign _035_ = i_oper[1] & i_oper[0];
  assign _036_ = w_konw[0] & _035_;
  assign _037_ = _034_ | _036_;
  assign _038_ = _030_ | _037_;
  assign _039_ = w_dod[0] | _032_;
  assign wynik[0] = _038_ & _039_;
  assign _040_ = w_konw[1] & _035_;
  assign _041_ = w_ust[1] & _028_;
  assign _042_ = w_dod[1] & _031_;
  assign _043_ = _041_ | _042_;
  assign wynik[1] = _040_ | _043_;
  assign _044_ = w_konw[2] & _035_;
  assign _045_ = w_ust[2] & _028_;
  assign _046_ = w_dod[2] & _031_;
  assign _047_ = _045_ | _046_;
  assign wynik[2] = _044_ | _047_;
  assign _048_ = w_konw[3] & _035_;
  assign _049_ = w_ust[3] & _028_;
  assign _050_ = w_dod[3] & _031_;
  assign _051_ = _049_ | _050_;
  assign wynik[3] = _048_ | _051_;
  assign _052_ = w_konw[4] & _035_;
  assign _053_ = w_ust[4] & _028_;
  assign _054_ = w_dod[4] & _031_;
  assign _055_ = _053_ | _054_;
  assign wynik[4] = _052_ | _055_;
  assign _056_ = w_konw[5] & _035_;
  assign _057_ = w_ust[5] & _028_;
  assign _058_ = w_dod[5] & _031_;
  assign _059_ = _057_ | _058_;
  assign wynik[5] = _056_ | _059_;
  assign _060_ = w_konw[6] & _035_;
  assign _061_ = w_ust[6] & _028_;
  assign _062_ = w_dod[6] & _031_;
  assign _063_ = _061_ | _062_;
  assign wynik[6] = _060_ | _063_;
  assign _064_ = w_konw[7] & _035_;
  assign _065_ = w_ust[7] & _028_;
  assign _066_ = w_dod[7] & _031_;
  assign _067_ = _065_ | _066_;
  assign wynik[7] = _064_ | _067_;
  assign _068_ = w_ust[8] & _028_;
  assign _069_ = ~_068_;
  assign _070_ = w_konw[8] & _035_;
  assign _071_ = ~_070_;
  assign _072_ = _002_ | _032_;
  assign _073_ = _071_ & _072_;
  assign _074_ = _069_ & _073_;
  assign wynik[8] = ~_074_;
  assign _075_ = w_ust[9] & _028_;
  assign _076_ = ~_075_;
  assign _077_ = _003_ | _032_;
  assign _078_ = w_konw[9] & _035_;
  assign _079_ = ~_078_;
  assign _080_ = _077_ & _079_;
  assign _081_ = _076_ & _080_;
  assign wynik[9] = ~_081_;
  assign _082_ = w_ust[10] & _028_;
  assign _083_ = w_dod[10] & _031_;
  assign _084_ = w_konw[10] & _035_;
  assign _085_ = _083_ | _084_;
  assign wynik[10] = _082_ | _085_;
  assign _086_ = w_konw[11] & _035_;
  assign _087_ = w_ust[11] & _028_;
  assign _088_ = w_dod[11] & _031_;
  assign _089_ = _087_ | _088_;
  assign wynik[11] = _086_ | _089_;
  assign _090_ = w_konw[12] & _035_;
  assign _091_ = ~_090_;
  assign _092_ = _004_ | _029_;
  assign _093_ = _005_ | _032_;
  assign _094_ = _092_ & _093_;
  assign _095_ = _091_ & _094_;
  assign wynik[12] = ~_095_;
  assign _096_ = w_konw[13] & _035_;
  assign _097_ = ~_096_;
  assign _098_ = _006_ | _029_;
  assign _099_ = _007_ | _032_;
  assign _100_ = _098_ & _099_;
  assign _101_ = _097_ & _100_;
  assign wynik[13] = ~_101_;
  assign _102_ = w_ust[14] & _028_;
  assign _103_ = ~_102_;
  assign _104_ = _008_ | _032_;
  assign _105_ = w_konw[14] & _035_;
  assign _106_ = ~_105_;
  assign _107_ = _104_ & _106_;
  assign _108_ = _103_ & _107_;
  assign wynik[14] = ~_108_;
  assign _109_ = w_konw[15] & _035_;
  assign _110_ = ~_109_;
  assign _111_ = _009_ | _029_;
  assign _112_ = _010_ | _032_;
  assign _113_ = _111_ & _112_;
  assign _114_ = _110_ & _113_;
  assign wynik[15] = ~_114_;
  assign _115_ = w_konw[16] & _035_;
  assign _116_ = w_ust[16] & _028_;
  assign _117_ = w_dod[16] & _031_;
  assign _118_ = _116_ | _117_;
  assign wynik[16] = _115_ | _118_;
  assign _119_ = w_konw[17] & _035_;
  assign _120_ = w_ust[17] & _028_;
  assign _121_ = w_dod[17] & _031_;
  assign _122_ = _120_ | _121_;
  assign wynik[17] = _119_ | _122_;
  assign _123_ = w_ust[18] & _028_;
  assign _124_ = w_dod[18] & _031_;
  assign _125_ = w_konw[18] & _035_;
  assign _126_ = _124_ | _125_;
  assign wynik[18] = _123_ | _126_;
  assign _127_ = w_ust[19] & _028_;
  assign _128_ = w_dod[19] & _031_;
  assign _129_ = w_konw[19] & _035_;
  assign _130_ = _128_ | _129_;
  assign wynik[19] = _127_ | _130_;
  assign _131_ = w_ust[20] & _028_;
  assign _132_ = w_dod[20] & _031_;
  assign _133_ = w_konw[20] & _035_;
  assign _134_ = _132_ | _133_;
  assign wynik[20] = _131_ | _134_;
  assign _135_ = w_ust[21] & _028_;
  assign _136_ = w_dod[21] & _031_;
  assign _137_ = w_konw[21] & _035_;
  assign _138_ = _136_ | _137_;
  assign wynik[21] = _135_ | _138_;
  assign _139_ = w_konw[22] & _035_;
  assign _140_ = ~_139_;
  assign _141_ = _011_ | _029_;
  assign _142_ = _012_ | _032_;
  assign _143_ = _141_ & _142_;
  assign _144_ = _140_ & _143_;
  assign wynik[22] = ~_144_;
  assign _145_ = w_konw[23] & _035_;
  assign _146_ = ~_145_;
  assign _147_ = _013_ | _029_;
  assign _148_ = _014_ | _032_;
  assign _149_ = _147_ & _148_;
  assign _150_ = _146_ & _149_;
  assign wynik[23] = ~_150_;
  assign _151_ = w_konw[24] & _035_;
  assign _152_ = ~_151_;
  assign _153_ = _015_ | _029_;
  assign _154_ = _016_ | _032_;
  assign _155_ = _153_ & _154_;
  assign _156_ = _152_ & _155_;
  assign wynik[24] = ~_156_;
  assign _157_ = w_ust[25] & _028_;
  assign _158_ = ~_157_;
  assign _159_ = _017_ | _032_;
  assign _160_ = w_konw[25] & _035_;
  assign _161_ = ~_160_;
  assign _162_ = _159_ & _161_;
  assign _163_ = _158_ & _162_;
  assign wynik[25] = ~_163_;
  assign _164_ = w_konw[26] & _035_;
  assign _165_ = ~_164_;
  assign _166_ = _018_ | _029_;
  assign _167_ = _019_ | _032_;
  assign _168_ = _166_ & _167_;
  assign _169_ = _165_ & _168_;
  assign wynik[26] = ~_169_;
  assign _170_ = w_konw[27] & _035_;
  assign _171_ = ~_170_;
  assign _172_ = _020_ | _029_;
  assign _173_ = _021_ | _032_;
  assign _174_ = _172_ & _173_;
  assign _175_ = _171_ & _174_;
  assign wynik[27] = ~_175_;
  assign _176_ = w_konw[28] & _035_;
  assign _177_ = ~_176_;
  assign _178_ = _022_ | _029_;
  assign _179_ = _023_ | _032_;
  assign _180_ = _178_ & _179_;
  assign _181_ = _177_ & _180_;
  assign wynik[28] = ~_181_;
  assign _182_ = w_konw[29] & _035_;
  assign _183_ = ~_182_;
  assign _184_ = _025_ | _032_;
  assign _185_ = _024_ | _029_;
  assign _186_ = _184_ & _185_;
  assign _187_ = _183_ & _186_;
  assign wynik[29] = ~_187_;
  assign _188_ = w_ust[30] & _028_;
  assign _189_ = ~_188_;
  assign _190_ = _026_ | _032_;
  assign _191_ = w_konw[30] & _035_;
  assign _192_ = ~_191_;
  assign _193_ = _190_ & _192_;
  assign _194_ = _189_ & _193_;
  assign wynik[30] = ~_194_;
  assign _195_ = w_ust[31] & _028_;
  assign _196_ = ~_195_;
  assign _197_ = _027_ | _032_;
  assign _198_ = w_konw[31] & _035_;
  assign _199_ = ~_198_;
  assign _200_ = _197_ & _199_;
  assign _201_ = _196_ & _200_;
  assign flaga_negative = ~_201_;
  assign _202_ = wynik[2] | wynik[3];
  assign _203_ = wynik[2] ^ wynik[3];
  assign _204_ = wynik[0] | wynik[1];
  assign _205_ = wynik[0] ^ wynik[1];
  assign _206_ = _203_ ^ _205_;
  assign _207_ = wynik[6] | wynik[7];
  assign _208_ = wynik[6] ^ wynik[7];
  assign _209_ = wynik[4] | wynik[5];
  assign _210_ = wynik[4] ^ wynik[5];
  assign _211_ = _208_ ^ _210_;
  assign _212_ = _206_ ^ _211_;
  assign _213_ = _108_ & _114_;
  assign _214_ = wynik[14] ^ _114_;
  assign _215_ = _095_ & _101_;
  assign _216_ = _095_ ^ _101_;
  assign _217_ = _214_ ^ _216_;
  assign _218_ = wynik[10] | wynik[11];
  assign _219_ = wynik[10] ^ wynik[11];
  assign _220_ = _074_ & _081_;
  assign _221_ = wynik[8] ^ _081_;
  assign _222_ = _219_ ^ _221_;
  assign _223_ = _217_ ^ _222_;
  assign _224_ = _212_ ^ _223_;
  assign _225_ = _194_ & _201_;
  assign _226_ = wynik[30] ^ _201_;
  assign _227_ = _181_ & _187_;
  assign _228_ = _181_ ^ _187_;
  assign _229_ = _226_ ^ _228_;
  assign _230_ = _169_ & _175_;
  assign _231_ = wynik[26] ^ _175_;
  assign _232_ = _156_ & _163_;
  assign _233_ = _156_ ^ _163_;
  assign _234_ = _231_ ^ _233_;
  assign _235_ = _229_ ^ _234_;
  assign _236_ = _144_ & _150_;
  assign _237_ = wynik[22] ^ _150_;
  assign _238_ = wynik[20] | wynik[21];
  assign _239_ = wynik[20] ^ wynik[21];
  assign _240_ = _237_ ^ _239_;
  assign _241_ = wynik[18] | wynik[19];
  assign _242_ = wynik[18] ^ wynik[19];
  assign _243_ = wynik[16] | wynik[17];
  assign _244_ = wynik[16] ^ wynik[17];
  assign _245_ = _242_ ^ _244_;
  assign _246_ = _240_ ^ _245_;
  assign _247_ = _235_ ^ _246_;
  assign flaga_even = _224_ ^ _247_;
  assign _248_ = _207_ | _209_;
  assign _249_ = _202_ | _218_;
  assign _250_ = _248_ | _249_;
  assign _251_ = _204_ | _250_;
  assign _252_ = ~_251_;
  assign _253_ = _238_ | _241_;
  assign _254_ = _243_ | _253_;
  assign _255_ = ~_254_;
  assign _256_ = _227_ & _230_;
  assign _257_ = _232_ & _236_;
  assign _258_ = _256_ & _257_;
  assign _259_ = _213_ & _220_;
  assign _260_ = _215_ & _225_;
  assign _261_ = _259_ & _260_;
  assign _262_ = _258_ & _261_;
  assign _263_ = _255_ & _262_;
  assign flaga_zero = _252_ & _263_;
  assign flaga_error = o_error_ust | o_error_konw;
  reg \o_result_reg[0] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[0]  <= 0;
    else
      \o_result_reg[0]  <= wynik[0];
  assign o_result[0] = \o_result_reg[0] ;
  reg \o_result_reg[1] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[1]  <= 0;
    else
      \o_result_reg[1]  <= wynik[1];
  assign o_result[1] = \o_result_reg[1] ;
  reg \o_result_reg[2] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[2]  <= 0;
    else
      \o_result_reg[2]  <= wynik[2];
  assign o_result[2] = \o_result_reg[2] ;
  reg \o_result_reg[3] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[3]  <= 0;
    else
      \o_result_reg[3]  <= wynik[3];
  assign o_result[3] = \o_result_reg[3] ;
  reg \o_result_reg[4] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[4]  <= 0;
    else
      \o_result_reg[4]  <= wynik[4];
  assign o_result[4] = \o_result_reg[4] ;
  reg \o_result_reg[5] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[5]  <= 0;
    else
      \o_result_reg[5]  <= wynik[5];
  assign o_result[5] = \o_result_reg[5] ;
  reg \o_result_reg[6] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[6]  <= 0;
    else
      \o_result_reg[6]  <= wynik[6];
  assign o_result[6] = \o_result_reg[6] ;
  reg \o_result_reg[7] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[7]  <= 0;
    else
      \o_result_reg[7]  <= wynik[7];
  assign o_result[7] = \o_result_reg[7] ;
  reg \o_result_reg[8] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[8]  <= 0;
    else
      \o_result_reg[8]  <= wynik[8];
  assign o_result[8] = \o_result_reg[8] ;
  reg \o_result_reg[9] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[9]  <= 0;
    else
      \o_result_reg[9]  <= wynik[9];
  assign o_result[9] = \o_result_reg[9] ;
  reg \o_result_reg[10] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[10]  <= 0;
    else
      \o_result_reg[10]  <= wynik[10];
  assign o_result[10] = \o_result_reg[10] ;
  reg \o_result_reg[11] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[11]  <= 0;
    else
      \o_result_reg[11]  <= wynik[11];
  assign o_result[11] = \o_result_reg[11] ;
  reg \o_result_reg[12] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[12]  <= 0;
    else
      \o_result_reg[12]  <= wynik[12];
  assign o_result[12] = \o_result_reg[12] ;
  reg \o_result_reg[13] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[13]  <= 0;
    else
      \o_result_reg[13]  <= wynik[13];
  assign o_result[13] = \o_result_reg[13] ;
  reg \o_result_reg[14] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[14]  <= 0;
    else
      \o_result_reg[14]  <= wynik[14];
  assign o_result[14] = \o_result_reg[14] ;
  reg \o_result_reg[15] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[15]  <= 0;
    else
      \o_result_reg[15]  <= wynik[15];
  assign o_result[15] = \o_result_reg[15] ;
  reg \o_result_reg[16] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[16]  <= 0;
    else
      \o_result_reg[16]  <= wynik[16];
  assign o_result[16] = \o_result_reg[16] ;
  reg \o_result_reg[17] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[17]  <= 0;
    else
      \o_result_reg[17]  <= wynik[17];
  assign o_result[17] = \o_result_reg[17] ;
  reg \o_result_reg[18] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[18]  <= 0;
    else
      \o_result_reg[18]  <= wynik[18];
  assign o_result[18] = \o_result_reg[18] ;
  reg \o_result_reg[19] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[19]  <= 0;
    else
      \o_result_reg[19]  <= wynik[19];
  assign o_result[19] = \o_result_reg[19] ;
  reg \o_result_reg[20] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[20]  <= 0;
    else
      \o_result_reg[20]  <= wynik[20];
  assign o_result[20] = \o_result_reg[20] ;
  reg \o_result_reg[21] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[21]  <= 0;
    else
      \o_result_reg[21]  <= wynik[21];
  assign o_result[21] = \o_result_reg[21] ;
  reg \o_result_reg[22] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[22]  <= 0;
    else
      \o_result_reg[22]  <= wynik[22];
  assign o_result[22] = \o_result_reg[22] ;
  reg \o_result_reg[23] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[23]  <= 0;
    else
      \o_result_reg[23]  <= wynik[23];
  assign o_result[23] = \o_result_reg[23] ;
  reg \o_result_reg[24] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[24]  <= 0;
    else
      \o_result_reg[24]  <= wynik[24];
  assign o_result[24] = \o_result_reg[24] ;
  reg \o_result_reg[25] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[25]  <= 0;
    else
      \o_result_reg[25]  <= wynik[25];
  assign o_result[25] = \o_result_reg[25] ;
  reg \o_result_reg[26] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[26]  <= 0;
    else
      \o_result_reg[26]  <= wynik[26];
  assign o_result[26] = \o_result_reg[26] ;
  reg \o_result_reg[27] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[27]  <= 0;
    else
      \o_result_reg[27]  <= wynik[27];
  assign o_result[27] = \o_result_reg[27] ;
  reg \o_result_reg[28] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[28]  <= 0;
    else
      \o_result_reg[28]  <= wynik[28];
  assign o_result[28] = \o_result_reg[28] ;
  reg \o_result_reg[29] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[29]  <= 0;
    else
      \o_result_reg[29]  <= wynik[29];
  assign o_result[29] = \o_result_reg[29] ;
  reg \o_result_reg[30] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      \o_result_reg[30]  <= 0;
    else
      \o_result_reg[30]  <= wynik[30];
  assign o_result[30] = \o_result_reg[30] ;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      o_status[0] <= 0;
    else
      o_status[0] <= flaga_error;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      o_status[1] <= 0;
    else
      o_status[1] <= flaga_zero;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      o_status[2] <= 0;
    else
      o_status[2] <= flaga_negative;
  always @(posedge i_clk or posedge i_rst)
    if (i_rst)
      o_status[3] <= 0;
    else
      o_status[3] <= flaga_even;
  \$paramod\Dodawanie\WIDTH=32  Dodawanie (
    .i_argA(i_argA),
    .i_argB(i_argB),
    .o_carry(o_carry),
    .o_result(w_dod)
  );
  \$paramod\Porownywanie\BITS=32  Porownywanie (
    .i_argA(i_argA),
    .i_argB(i_argB),
    .o_result(w_por)
  );
  \$paramod\konwersja\WIDTH=32  konwersja (
    .i_argA(i_argA),
    .o_error(o_error_konw),
    .o_result(w_konw)
  );
  \$paramod\ustawianie\BITS=32  ustawianie (
    .i_argA(i_argA),
    .i_argB(i_argB),
    .o_error(o_error_ust),
    .o_result(w_ust)
  );
  assign o_result[31] = o_status[2];
  assign wynik[31] = flaga_negative;
endmodule
